@page "/add-contact"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3>Dodaj kontakt</h3>

<EditForm Model="@newContact" OnValidSubmit="HandleSubmit">
    <InputText @bind-Value="newContact.FirstName" placeholder="Imię" />
    <InputText @bind-Value="newContact.LastName" placeholder="Nazwisko" />
    <InputText @bind-Value="newContact.Email" placeholder="Email" />
    <InputText @bind-Value="newContact.Password" type="password" placeholder="Hasło" />
    <InputText @bind-Value="newContact.PhoneNumber" placeholder="Telefon" />
    <InputDate @bind-Value="newContact.BirthDate" />
    <InputNumber @bind-Value="newContact.CategoryId" />
    <button type="submit">Dodaj</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
        <p>@message</p>
}

@code {
    private ContactDto newContact = new();
    private string message = "";

    private async Task HandleSubmit()
    {
        try
        {
            // Pobierz token
            var token = await JS.InvokeAsync<string>("localStorage.getItem", "jwtToken");

            if (string.IsNullOrEmpty(token))
            {
                message = "Brak tokenu. Zaloguj się.";
                return;
            }

            Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);

            var response = await Http.PostAsJsonAsync("api/Contacts", newContact);

            if (response.IsSuccessStatusCode)
            {
                message = "Dodano kontakt!";
                Navigation.NavigateTo("/");
            }
            else
            {
                message = $"Błąd: {response.ReasonPhrase}";
            }
        }
        catch (Exception ex)
        {
            message = $"Błąd: {ex.Message}";
        }
    }

    public class ContactDto
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
        public string PhoneNumber { get; set; }
        public DateTime BirthDate { get; set; }
        public int CategoryId { get; set; }
    }
}
