@page "/login"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject AuthService AuthService

<h3>Logowanie</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red;">@errorMessage</p>
}

<form @onsubmit="HandleLogin">
    <input @bind="email" placeholder="Email" />
    <input type="password" @bind="password" placeholder="Hasło" />
    <button type="submit">Zaloguj</button>
</form>

@code {
    private string email = string.Empty;
    private string password = string.Empty;
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        try
        {
            // Wysyłanie żądania do API
            var response = await Http.PostAsJsonAsync("api/auth/login", new { Email = email, Password = password });

            // Sprawdzenie odpowiedzi
            if (!response.IsSuccessStatusCode)
            {
                errorMessage = "Nie udało się zalogować. Sprawdź dane logowania.";
            }
            else
            {
                var result = await response.Content.ReadFromJsonAsync<TokenResponse>();
                var token = result.Token;

                // Zapisz token do localStorage i ustaw nagłówek
                await AuthService.LoginAsync(token);
                Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
                NavigationManager.NavigateTo("/");

            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Wystąpił błąd: {ex.Message}";
        }
    }

    public class TokenResponse
    {
        public string Token { get; set; }
    }
}